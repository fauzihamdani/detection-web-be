"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OnvifServiceMedia = void 0;
var service_base_1 = require("./service-base");
var soap_1 = require("./soap");
var OnvifServiceMedia = /** @class */ (function (_super) {
    __extends(OnvifServiceMedia, _super);
    function OnvifServiceMedia(configs) {
        var _this = this;
        var xaddr = configs.xaddr, user = configs.user, pass = configs.pass, timeDiff = configs.timeDiff;
        _this = _super.call(this, { xaddr: xaddr, user: user, pass: pass }) || this;
        _this.timeDiff = timeDiff;
        _this.namespaceAttrList = [
            'xmlns:trt="http://www.onvif.org/ver10/media/wsdl"',
            'xmlns:tt="http://www.onvif.org/ver10/schema"'
        ];
        return _this;
    }
    OnvifServiceMedia.prototype.getStreamUri = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetStreamUri>';
        soapBody += '<trt:StreamSetup>';
        soapBody += '<tt:Stream>RTP-Unicast</tt:Stream>';
        soapBody += '<tt:Transport>';
        soapBody += '<tt:Protocol>' + params.Protocol + '</tt:Protocol>';
        soapBody += '</tt:Transport>';
        soapBody += '</trt:StreamSetup>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetStreamUri>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetStreamUri', soap);
    };
    OnvifServiceMedia.prototype.getVideoEncoderConfigurations = function () {
        var soapBody = '<trt:GetVideoEncoderConfigurations/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetVideoEncoderConfigurations', soap);
    };
    OnvifServiceMedia.prototype.getVideoEncoderConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetVideoEncoderConfiguration>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetVideoEncoderConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetVideoEncoderConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getCompatibleVideoEncoderConfigurations = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetCompatibleVideoEncoderConfigurations>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetCompatibleVideoEncoderConfigurations>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'CompatibleVideoEncoderConfigurations', soap);
    };
    OnvifServiceMedia.prototype.getVideoEncoderConfigurationOptions = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetVideoEncoderConfigurationOptions>';
        if (params.ProfileToken) {
            soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        }
        if (params.ConfigurationToken) {
            soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        }
        soapBody += '</trt:GetVideoEncoderConfigurationOptions>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'VideoEncoderConfigurationOptions', soap);
    };
    OnvifServiceMedia.prototype.getGuaranteedNumberOfVideoEncoderInstances = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetGuaranteedNumberOfVideoEncoderInstances>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetGuaranteedNumberOfVideoEncoderInstances>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GuaranteedNumberOfVideoEncoderInstances', soap);
    };
    OnvifServiceMedia.prototype.getProfiles = function () {
        var soapBody = '<trt:GetProfiles/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetProfiles', soap);
    };
    OnvifServiceMedia.prototype.getProfile = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetProfile>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetProfile>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetProfile', soap);
    };
    OnvifServiceMedia.prototype.createProfile = function (params) {
        var soapBody = '';
        soapBody += '<trt:CreateProfile>';
        soapBody += '<trt:Name>' + params.Name + '</trt:Name>';
        if (params.Token) {
            soapBody += '<trt:Token>' + params.Token + '</trt:Token>';
        }
        soapBody += '</trt:CreateProfile>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'CreateProfile', soap);
    };
    OnvifServiceMedia.prototype.deleteProfile = function (params) {
        var soapBody = '';
        soapBody += '<trt:DeleteProfile>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:DeleteProfile>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'DeleteProfile', soap);
    };
    OnvifServiceMedia.prototype.getVideoSources = function () {
        var soapBody = '<trt:GetVideoSources/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetVideoSources', soap);
    };
    OnvifServiceMedia.prototype.getVideoSourceConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetVideoSourceConfiguration>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetVideoSourceConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetVideoSourceConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getVideoSourceConfigurations = function () {
        var soapBody = '<trt:GetVideoSourceConfigurations/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetVideoSourceConfigurations', soap);
    };
    OnvifServiceMedia.prototype.addVideoSourceConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:AddVideoSourceConfiguration>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:AddVideoSourceConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'AddVideoSourceConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getCompatibleVideoSourceConfigurations = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetCompatibleVideoSourceConfigurations>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetCompatibleVideoSourceConfigurations>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetCompatibleVideoSourceConfigurations', soap);
    };
    OnvifServiceMedia.prototype.getVideoSourceConfigurationOptions = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetVideoSourceConfigurationOptions>';
        if (params.ProfileToken) {
            soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        }
        if (params.ConfigurationToken) {
            soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        }
        soapBody += '</trt:GetVideoSourceConfigurationOptions>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetVideoSourceConfigurationOptions', soap);
    };
    OnvifServiceMedia.prototype.getMetadataConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetMetadataConfiguration>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetMetadataConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetMetadataConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getMetadataConfigurations = function () {
        var soapBody = '<trt:GetMetadataConfigurations/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetMetadataConfigurations', soap);
    };
    OnvifServiceMedia.prototype.addMetadataConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:AddMetadataConfiguration>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:AddMetadataConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'AddMetadataConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getCompatibleMetadataConfigurations = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetCompatibleMetadataConfigurations>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetCompatibleMetadataConfigurations>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetCompatibleMetadataConfigurations', soap);
    };
    OnvifServiceMedia.prototype.getMetadataConfigurationOptions = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetMetadataConfigurationOptions>';
        if (params.ProfileToken) {
            soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        }
        if (params.ConfigurationToken) {
            soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        }
        soapBody += '</trt:GetMetadataConfigurationOptions>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetMetadataConfigurationOptions', soap);
    };
    OnvifServiceMedia.prototype.getAudioSources = function () {
        var soapBody = '<trt:GetAudioSources/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioSources', soap);
    };
    OnvifServiceMedia.prototype.getAudioSourceConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetAudioSourceConfiguration>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetAudioSourceConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioSourceConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getAudioSourceConfigurations = function () {
        var soapBody = '<trt:GetAudioSourceConfigurations/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioSourceConfigurations', soap);
    };
    OnvifServiceMedia.prototype.addAudioSourceConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:AddAudioSourceConfiguration>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:AddAudioSourceConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'AddAudioSourceConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getCompatibleAudioSourceConfigurations = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetCompatibleAudioSourceConfigurations>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetCompatibleAudioSourceConfigurations>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetCompatibleAudioSourceConfigurations', soap);
    };
    OnvifServiceMedia.prototype.getAudioSourceConfigurationOptions = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetAudioSourceConfigurationOptions>';
        if (params.ProfileToken) {
            soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        }
        if (params.ConfigurationToken) {
            soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        }
        soapBody += '</trt:GetAudioSourceConfigurationOptions>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioSourceConfigurationOptions', soap);
    };
    OnvifServiceMedia.prototype.getAudioEncoderConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetAudioEncoderConfiguration>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:GetAudioEncoderConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioEncoderConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getAudioEncoderConfigurations = function () {
        var soapBody = '<trt:GetAudioEncoderConfigurations/>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioEncoderConfigurations', soap);
    };
    OnvifServiceMedia.prototype.addAudioEncoderConfiguration = function (params) {
        var soapBody = '';
        soapBody += '<trt:AddAudioEncoderConfiguration>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        soapBody += '</trt:AddAudioEncoderConfiguration>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'AddAudioEncoderConfiguration', soap);
    };
    OnvifServiceMedia.prototype.getCompatibleAudioEncoderConfigurations = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetCompatibleAudioEncoderConfigurations>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetCompatibleAudioEncoderConfigurations>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetCompatibleAudioEncoderConfigurations', soap);
    };
    OnvifServiceMedia.prototype.getAudioEncoderConfigurationOptions = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetAudioEncoderConfigurationOptions>';
        if (params.ProfileToken) {
            soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        }
        if (params.ConfigurationToken) {
            soapBody += '<trt:ConfigurationToken>' + params.ConfigurationToken + '</trt:ConfigurationToken>';
        }
        soapBody += '</trt:GetAudioEncoderConfigurationOptions>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetAudioEncoderConfigurationOptions', soap);
    };
    OnvifServiceMedia.prototype.startMulticastStreaming = function (params) {
        var soapBody = '';
        soapBody += '<trt:StartMulticastStreaming>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:StartMulticastStreaming>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'StartMulticastStreaming', soap);
    };
    OnvifServiceMedia.prototype.stopMulticastStreaming = function (params) {
        var soapBody = '';
        soapBody += '<trt:StopMulticastStreaming>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:StopMulticastStreaming>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'StopMulticastStreaming', soap);
    };
    OnvifServiceMedia.prototype.GetSnapshotUri = function (params) {
        var soapBody = '';
        soapBody += '<trt:GetSnapshotUri>';
        soapBody += '<trt:ProfileToken>' + params.ProfileToken + '</trt:ProfileToken>';
        soapBody += '</trt:GetSnapshotUri>';
        var soap = this.createRequestSoap(soapBody);
        return soap_1.requestCommand(this.oxaddr, 'GetSnapshotUri', soap);
    };
    return OnvifServiceMedia;
}(service_base_1.OnvifServiceBase));
exports.OnvifServiceMedia = OnvifServiceMedia;
//# sourceMappingURL=service-media.js.map